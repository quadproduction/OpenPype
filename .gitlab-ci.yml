# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:
  - build
  - test
  - staged
  - prod

build-centos:
  stage: build
  tags: 
    - shell
    - centos
  script:
    # Add python from soft prod 
    - export PATH="/prod/softprod/apps/python/3.7.9/linux/bin:$PATH"
    # Create virtual environment in ./venv
    - ./tools/create_env.sh
    # Get PySide2, ffmpeg, oiio and other tools needed
    - ./tools/fetch_thirdparty_libs.sh
    # build pype executables in .\build\
    - ./tools/build.sh
    - tar cvzfp ./build.tar.gz ./build
  artifacts:
    paths:
      - ./build.tar.gz
    expire_in: 1 day

# build-windows:
#   stage: build
#   tags: 
#     - docker
#   image: windows10:latest
#   before_script:
#     # install python
#     - curl https://www.python.org/ftp/python/3.7.9/python-3.7.9-amd64.exe -o python_install.exe
#     - python_install.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0
#   script:
#     - .\tools\create_env.ps1
#     - .\tools\fetch_thirdparty_libs.ps1
#     - .\tools\build.ps1

deploy-centos-staged:
  stage: staged
  tags: 
    - shell
    - centos
  script:
    - export
    - tar xzfp ./build.tar.gz
    - ls ./build/
    - version=$(git describe --match ?.* --all --always | sed -e 's/tags\///g')
    - echo $version
    - mkdir -p /prod/softprod/apps/openpype/$version/linux/
    - rsync -rptl ./build/exe.linux-x86_64-3.7/ /prod/softprod/apps/openpype/$version/linux/

deploy-centos-prod:
  stage: prod
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
  tags: 
    - shell
    - centos
  script:
    - pwd
